'''
Дани двійкові файли f та g, компоненти яких є цілими числами. Отримати в
файлі h нові компоненти, що утворюються в результаті віднімання двох компонентів
файлів f та g, що знаходяться на відповідних позиціях
Виконав студент групи 122-А Андрощук Артем
'''

firstNumbers = [1, 12, 15, 43, 23]  # записуємо цілі значення для першого файлу у масив

secondNumbers = [5, 23, 43, 2, 10]  # записуємо цілі значення для другого файлу у масив

f = open('f.bin', 'wb')  # відкриваємо перший файл для запису
g = open('g.bin', 'wb')  # відкриваємо другий файл для запису

for item in firstNumbers:  # проходимо по елементам першого масиву
    s = str(item) + '\n'  # переводимо число у строку
    bt = s.encode()  # переводимо у бінарний код
    f.write(bt)  # записуємо у файл

for item in secondNumbers:  # проходимо по елементам другого масиву
    s = str(item) + '\n'  # переводимо число у строку
    bt = s.encode()  # переводимо у бінарний код
    g.write(bt)  # записуємо у файл
# закриємо файли для запису
f.close()
g.close
# відкриваємо файли для читання
f = open('f.bin', 'rb')
g = open('g.bin', 'rb')

h = open('h.bin', 'wb')  # відкривамо третій файл для запису
i = 0  # вводимо лічильник
for ln in f:  # проходимо по 1 файлу
    x = int(ln)  # конвертуємо бінарний код у ціле число
    firstNumbers[i] = x  # присваюємо це число позиції і
    i += 1  # збільшуємо лічильник
j = 0  # вводимо лічильник
for ln in g:  # проходимо по 1 файлу
    x = int(ln)  # конвертуємо бінарний код у ціле число
    y = firstNumbers[j] - x  # присваюємо це число позиції і одразу знаходимо результат
    bt = str(y).encode()  # конвертуємо у бінарний код
    h.write(bt)  # записуємо у файл
    j += 1  # збільшуємо лічильник
h.close()  # закриваємо останній файл
